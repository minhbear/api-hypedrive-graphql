# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ReturnMessageBase {
  success: Boolean!
  message: String!
}

type Query {
  logOut: ReturnMessageBase!
  refreshToken: ReturnTokenDto!
  helloFilmMaker: String!
  getFilmMaker(id: ID!): PersonEntity!
}

type ReturnTokenDto {
  accessToken: String!
  refreshToken: String!
}

type PersonEntity {
  id: ID!
  publicKey: String
  email: String
  password: String
  avatar: String
  background: String
  name: String!
  bio: String
  discord: String
  youtube: String
  twitter: String
  instagram: String
  refreshToken: String
  role: Role!
}

enum Role {
  ADMIN
  USER
  FILMMAKER
}

type Mutation {
  signUp(input: CreateAccountDto!): ReturnAccountDto!
  signIn(input: SignInDto!): ReturnAccountDto!
  createFilm(input: CreateFilmDto!): ReturnMessageBase!
  createCollection(input: CreateCollectionNFTDto!): ReturnMessageBase!
}

type ReturnAccountDto {
  accessToken: String!
  refreshToken: String!
  person: PersonEntity!
}

input CreateAccountDto {
  name: String!
  email: String!
  password: String!
  role: Role!
}

input SignInDto {
  email: String!
  password: String!
}

input CreateFilmDto {
  name: String!
  description: String!
  duration: Int!
  releaseDate: String!
  genres: [FilmGenre!]! = []
  stars: [String!]! = []
  directors: [String!]! = []
  status: FilmStatus!
  topCasts: [FilmTopCast!]! = []
  gallery: [String!]! = []
}

enum FilmGenre {
  DRAMA
  ADVENTURE
  COMEDY
}

enum FilmStatus {
  COMMING_SOON
  ON_GOING
}

input FilmTopCast {
  name: String!
  avatar: String!
}

input CreateCollectionNFTDto {
  id: Float!
  metadata: CollectionMetadataDto!
}

input CollectionMetadataDto {
  name: String!
  symbol: String!
  uri: String!
}